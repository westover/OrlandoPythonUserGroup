Python 2.7.5
NumPy 1.7.1
SciPy 0.12.0

Naive implementation, 5 particles:

[[ 0.          0.0711287   0.66480609  0.8126538   1.26304752]
 [ 0.0711287   0.          2.40231876  0.53100853  2.7064314 ]
 [ 0.66480609  2.40231876  0.          1.70061736 -0.49830503]
 [ 0.8126538   0.53100853  1.70061736  0.          2.38213236]
 [ 1.26304752  2.7064314  -0.49830503  2.38213236  0.        ]]

Less naive implementation, 5 particles:
[[ 0.          0.          0.          0.          0.        ]
 [ 0.0711287   0.          0.          0.          0.        ]
 [ 0.66480609  2.40231876  0.          0.          0.        ]
 [ 0.8126538   0.53100853  1.70061736  0.          0.        ]
 [ 1.26304752  2.7064314  -0.49830503  2.38213236  0.        ]]


collision_detection.py
Distance matrix:
[[ 0.          0.          0.          0.          0.        ]
 [-0.34309704  0.          0.          0.          0.        ]
 [ 0.13184487  1.52185501  0.          0.          0.        ]
 [ 0.25012304  0.02480682  0.96049389  0.          0.        ]
 [ 0.61043802  1.76514512 -0.79864403  1.50570589  0.        ]]

d < 0.0
[[False False False False False]
 [ True False False False False]
 [False False False False False]
 [False False False False False]
 [False False  True False False]]

collisions = np.where(d < 0.0)
(array([1, 4]), array([0, 2]))

Which particles overlap?
collision_indices = zip(collisions[0], collisions[1])
[(1, 0), (4, 2)]
